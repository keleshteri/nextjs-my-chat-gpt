---
description: 
globs: *.tsx,*.jsx,*.css,*.scss
alwaysApply: false
---
---
description: Vision Pro-inspired Tailwind UI Component Guidelines
globs: *.tsx,*.css
alwaysApply: true
---
# Vision Pro-inspired Tailwind UI Component Guidelines

<rule>
name: vision_pro_ui_guidelines
description: Standards for creating Vision Pro-inspired UI components using Tailwind CSS
filters:
  - type: file_extension
    pattern: "\\.(tsx|css)$"
  - type: content
    pattern: "(?s)className=.*"

actions:
  - type: suggest
    message: |
      When creating Vision Pro-inspired UI components:

      1. Design Tokens:
         ```typescript
         // colors.ts
         export const colors = {
           glass: {
             background: 'rgba(255, 255, 255, 0.1)',
             border: 'rgba(255, 255, 255, 0.2)',
             shadow: 'rgba(0, 0, 0, 0.1)',
           },
           text: {
             primary: 'rgba(255, 255, 255, 0.9)',
             secondary: 'rgba(255, 255, 255, 0.7)',
             accent: '#007AFF',
           },
           blur: {
             light: 'blur(20px)',
             medium: 'blur(30px)',
             heavy: 'blur(40px)',
           }
         }
         ```

      2. Component Structure:
         ```tsx
         // Example component structure
         <div className="
           relative
           backdrop-blur-md
           bg-glass-background
           border border-glass-border
           rounded-2xl
           shadow-lg
           p-6
           transition-all
           duration-300
           hover:scale-[1.02]
           hover:bg-glass-background/20
         ">
           {/* Content */}
         </div>
         ```

      3. Glass Morphism Guidelines:
         - Always use backdrop-blur for glass effects
         - Implement subtle transparency (0.1-0.2)
         - Add soft borders with low opacity
         - Use layered shadows for depth
         - Apply smooth transitions

      4. Typography System:
         ```css
         /* Base font sizes */
         .text-display { @apply text-4xl font-light tracking-tight; }
         .text-headline { @apply text-2xl font-medium; }
         .text-body { @apply text-base font-normal; }
         .text-caption { @apply text-sm font-light; }
         ```

      5. Animation Guidelines:
         - Use subtle scale transforms on hover
         - Implement smooth transitions (300-500ms)
         - Add gentle floating animations
         - Include micro-interactions
         - Ensure 60fps performance

      6. Layout Principles:
         - Maintain generous whitespace
         - Use asymmetric grid systems
         - Implement floating elements
         - Create depth through z-index layering
         - Support dark mode by default

      7. Interactive Elements:
         ```tsx
         // Button example
         <button className="
           relative
           overflow-hidden
           px-6 py-3
           rounded-xl
           bg-glass-background
           border border-glass-border
           text-text-primary
           transition-all
           duration-300
           hover:scale-105
           hover:bg-glass-background/30
           active:scale-95
         ">
           <span className="relative z-10">Button Text</span>
           <div className="
             absolute inset-0
             bg-gradient-to-r from-accent/20 to-accent/10
             opacity-0
             transition-opacity
             hover:opacity-100
           "/>
         </button>
         ```

      8. Responsive Design:
         - Use fluid typography
         - Implement container queries
         - Support gesture interactions
         - Maintain readability at all sizes
         - Consider spatial computing layouts

      9. Accessibility:
         - Maintain WCAG 2.1 AA compliance
         - Ensure sufficient contrast ratios
         - Support keyboard navigation
         - Provide focus indicators
         - Include ARIA labels

      10. Performance Optimization:
          - Use CSS containment
          - Implement lazy loading
          - Optimize animations
          - Minimize layout shifts
          - Support reduced motion

examples:
  - input: |
      // Bad: Flat design without glass effect
      <div className="bg-white p-4 rounded">
        Content
      </div>

      // Good: Vision Pro-inspired glass effect
      <div className="
        relative
        backdrop-blur-md
        bg-glass-background
        border border-glass-border
        rounded-2xl
        p-6
        transition-all
        duration-300
      ">
        Content
      </div>
    output: "Correctly implemented Vision Pro-inspired component"

metadata:
  priority: high
  version: 1.0
</rule> 